# Definition for singly-linked list.
class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next
class Solution:
    def mergeTwoLists(self, l1: ListNode, l2: ListNode) -> ListNode:
        l3 = ListNode()
        temp = l3        
        while l1 or l2:
            if (l1 == None):
                temp.next = ListNode(l2.val)
                l2 = l2.next
            elif (l2 == None):
                temp.next = ListNode(l1.val)
                l1 = l1.next
                
            else:
                if (l1.val < l2.val):
                    temp.next = ListNode(l1.val)
                    l1 = l1.next
                else:
                    temp.next = ListNode(l2.val)
                    l2 = l2.next
            temp = temp.next
            
        return l3.next
        
        
        // Time: O(n)
        //  Space: M(n+m)
